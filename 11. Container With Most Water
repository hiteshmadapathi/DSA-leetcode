# Time Complexity - O(n)
# Space Complexity - O(1)

class Solution:
    def maxArea(self, height: List[int]) -> int:
        l = 0
        h = len(height)-1
        area = float('-inf')
        while l<h:
            area = max(area,(h-l)*min(height[l],height[h]))
            if height[l]<=height[h]:
                l = l+1
            else:
                h = h-1
        return area
    
    """
    def maxArea(self, height: List[int]) -> int:
        area = float('-inf')
        for i in range(len(height)):
            for j in range(i+1, len(height)):
                area = max(area, (j-i)*min(height[i], height[j]))
        return area
    """
